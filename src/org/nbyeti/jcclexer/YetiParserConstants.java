/* Generated By:JavaCC: Do not edit this line. YetiParserConstants.java */
package org.nbyeti.jcclexer;

public interface YetiParserConstants {

  int EOF = 0;
  int WHITESPACE = 1;
  int SINGLE_LINE_COMMENT = 2;
  int VAR = 3;
  int LOOP = 4;
  int CASE = 5;
  int ESAC = 6;
  int OF = 7;
  int TRY = 8;
  int THROW = 9;
  int CATCH = 10;
  int FINALLY = 11;
  int YRT = 12;
  int DO = 13;
  int DONE = 14;
  int IF = 15;
  int FI = 16;
  int ELSE = 17;
  int ELIF = 18;
  int THEN = 19;
  int IS = 20;
  int AS = 21;
  int UNSAFELY_AS = 22;
  int INSTANCEOF = 23;
  int NEW = 24;
  int WITH = 25;
  int TYPEDEF = 26;
  int SYNCHRONIZED = 27;
  int IMPORT = 28;
  int LOAD = 29;
  int PROGRAM = 30;
  int MODULE = 31;
  int CLASS = 32;
  int ABSTRACT = 33;
  int BOOLEAN = 34;
  int BYTE = 35;
  int CHAR = 36;
  int DOUBLE = 37;
  int EXTENDS = 38;
  int FLOAT = 39;
  int INT = 40;
  int LONG = 41;
  int SHORT = 42;
  int THIS = 43;
  int VOID = 44;
  int END = 45;
  int UNIT = 46;
  int FALSE = 47;
  int TRUE = 48;
  int NUMBER_LITERAL = 49;
  int INTEGER_LITERAL = 50;
  int FLOATING_POINT_LITERAL = 51;
  int DECIMAL_EXPONENT = 52;
  int STRING_LITERAL = 53;
  int IDENTIFIER = 54;
  int LETTER = 55;
  int PART_LETTER = 56;
  int LPAREN = 57;
  int RPAREN = 58;
  int LBRACE = 59;
  int RBRACE = 60;
  int LBRACKET = 61;
  int RBRACKET = 62;
  int SEMICOLON = 63;
  int COMMA = 64;
  int DOT = 65;
  int AT = 66;
  int ASSIGN = 67;
  int LT = 68;
  int BANG = 69;
  int COLON = 70;
  int EQ = 71;
  int SC_OR = 72;
  int SC_AND = 73;
  int PLUS = 74;
  int MINUS = 75;
  int STAR = 76;
  int SLASH = 77;
  int BIT_AND = 78;
  int BIT_OR = 79;
  int XOR = 80;
  int REM = 81;
  int ELLIPSIS = 82;
  int UNEXPECTED_CHAR = 83;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<SINGLE_LINE_COMMENT>",
    "\"var\"",
    "\"loop\"",
    "\"case\"",
    "\"esac\"",
    "\"of\"",
    "\"try\"",
    "\"throw\"",
    "\"catch\"",
    "\"finally\"",
    "\"yrt\"",
    "\"do\"",
    "\"done\"",
    "\"if\"",
    "\"fi\"",
    "\"else\"",
    "\"elif\"",
    "\"then\"",
    "\"is\"",
    "\"as\"",
    "\"unsafely_as\"",
    "\"instanceof\"",
    "\"new\"",
    "\"with\"",
    "\"typedef\"",
    "\"synchronized\"",
    "\"import\"",
    "\"load\"",
    "\"program\"",
    "\"module\"",
    "\"class\"",
    "\"abstract\"",
    "\"boolean\"",
    "\"byte\"",
    "\"char\"",
    "\"double\"",
    "\"extends\"",
    "\"float\"",
    "\"int\"",
    "\"long\"",
    "\"short\"",
    "\"this\"",
    "\"void\"",
    "\"end\"",
    "\"()\"",
    "\"false\"",
    "\"true\"",
    "<NUMBER_LITERAL>",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"@\"",
    "\"=\"",
    "\"<\"",
    "\"!\"",
    "\":\"",
    "\"==\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"..\"",
    "<UNEXPECTED_CHAR>",
  };

}
